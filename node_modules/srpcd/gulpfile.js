// Require gulp
const path = require('path');
const gulp = require('gulp');
const tsImport = require('gulp-typescript-path-resolver');
const file = require('gulp-file');
const _ = require('lodash');
// Require Typescript plugin
const ts = require("gulp-typescript");
const tsProjectSource = ts.createProject("tsconfig.json");
const _ENVIRONMENT_ = process.env.BUILD_ENV ? '.' + process.env.BUILD_ENV : '';
const _BUILD_DIR_ = tsProjectSource.config.compilerOptions.outDir;
const _SRC_DIR_ = tsProjectSource.config.compilerOptions.sourceRoot;

// Lets Create task for our typescript compilation
const tsc = function () {
    return tsProjectSource.src()
        .pipe(tsProjectSource())
        .pipe(tsImport.tsPathResolver(tsProjectSource.config.compilerOptions, {
            "paths": {
                "@app/env": [ "environments/environment"+ _ENVIRONMENT_ ],
            }
        }))
        .pipe(gulp.dest(_BUILD_DIR_));
};

const copyOhmFiles = function () {
    return gulp.src([`src/**/*.ohm`])
        .pipe(gulp.dest(_BUILD_DIR_));
};

const copyBuiltinSrpcdFiles = function () {
    return gulp.src([`src/**/*.srpcd`])
        .pipe(gulp.dest(_BUILD_DIR_));
};

const copyHelperCodeFiles = function () {
    return gulp.src([`src/**/*.include.ts`])
        .pipe(gulp.dest(_BUILD_DIR_));
};


gulp.task('build', gulp.series(gulp.parallel(tsc, copyOhmFiles, copyHelperCodeFiles, copyBuiltinSrpcdFiles)));

